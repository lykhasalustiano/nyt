{"mappings":"ACAA,MAAM,EAAU,CACd,iHACA,qHACD,CAED,eAAe,IACb,GAAI,CACA,IAAM,EAAgB,EAAQ,GAAG,CAAC,AAAA,GAAO,MAAM,GAAK,IAAI,CAAC,AAAA,IACrD,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAC,CAAC,EAE5D,OAAO,EAAS,IAAI,EACxB,IAEM,EAAU,MAAM,QAAQ,GAAG,CAAC,GAC5B,EAAU,CAAO,CAAC,EAAE,CAAC,OAAO,CAC5B,EAAc,CAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAEtC,EAAmB,EAAQ,GAAG,CAAC,AAAC,GAAW,CAAC;;kBAEtC,EAAE,EAAO,UAAU,CAAC;0CACI,EAAE,EAAO,WAAW,CAAC;mCAC5B,EAAE,EAAO,OAAO,CAAC;oDACA,EAAE,EAAO,cAAc,CAAC;uBACrD,EAAE,EAAO,GAAG,CAAC;;;MAG9B,CAAC,EAAE,IAAI,CAAC,IAEF,EAAuB,EAAY,GAAG,CAAC,AAAC,IAC1C,IAAM,EAAW,EAAK,SAAS,CAAG,EAAK,SAAS,CAAC,GAAG,CAAC,AAAA,GAAQ,CAAC;2BAC7C,EAAE,EAAK,GAAG,CAAC,kBAAkB,EAAE,EAAK,IAAI,CAAC;UAC1D,CAAC,EAAE,IAAI,CAAC,IAAM,GAEd,MAAO,CAAC;;sBAEI,EAAE,EAAK,KAAK,CAAC;8CACW,EAAE,EAAK,MAAM,CAAC;4BAChC,EAAE,EAAK,UAAU,CAAC,OAAO,EAAE,EAAK,KAAK,CAAC,SAAS,EAAE,EAAK,gBAAgB,CAAC,UAAU,EAAE,EAAK,iBAAiB,CAAC;uCAC/F,EAAE,EAAK,WAAW,CAAC;iDACT,EAAE,EAAK,SAAS,CAAC;;0BAExC,EAAE,EAAS;;;;UAI3B,CAAC,AACL,GAAG,IAAI,CAAC,GAER,CAAA,SAAS,cAAc,CAAC,eAAe,SAAS,CAAG,EACnD,SAAS,cAAc,CAAC,WAAW,SAAS,CAAG,CAEnD,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,uBAAwB,GACtC,SAAS,cAAc,CAAC,WAAW,SAAS,CAAG,sBACnD,CACF,CAEA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,GACF,GAEA,SAAS,gBAAgB,CAAC,gBAAgB,OAAO,CAAC,AAAA,IAChD,EAAK,gBAAgB,CAAC,QAAS,SAAS,CAAC,EACrC,EAAE,cAAc,GAChB,IAAM,EAAW,IAAI,CAAC,YAAY,CAAC,QAC7B,EAAgB,SAAS,aAAa,CAAC,GAE7C,GAAI,EAAe,CACf,IAAM,EAAe,SAAS,aAAa,CAAC,UAAU,YAAY,CAE5D,EAAiB,AADC,EAAc,qBAAqB,GAAG,GAAG,CACxB,OAAO,WAAW,CAAG,EAE9D,OAAO,QAAQ,CAAC,CACZ,IAAK,EACL,SAAU,QACd,EACJ,CACJ,EACF","sources":["<anon>","src/index.js"],"sourcesContent":["var $35da740d59af89ba$exports = {};\nconst $35da740d59af89ba$var$apiUrls = [\n    \"https://api.nytimes.com/svc/books/v3/reviews.json?author=Stephen+King&api-key=yZMn0M2qMZZ73db9jKLRryq2vpGRHVZj\",\n    \"https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=FGFGfSjcUsbw09HuTzKJsY2fAZMmkqwT\"\n];\nasync function $35da740d59af89ba$var$fetchAllData() {\n    try {\n        const fetchPromises = $35da740d59af89ba$var$apiUrls.map((url)=>fetch(url).then((response)=>{\n                if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n                return response.json();\n            }));\n        const results = await Promise.all(fetchPromises);\n        const reviews = results[0].results;\n        const bestsellers = results[1].results.books;\n        const formattedReviews = reviews.map((review)=>`\r\n          <div class=\"book\">\r\n              <h2>${review.book_title}</h2>\r\n              <p><strong>Author:</strong> ${review.book_author}</p>\r\n              <p><strong></strong> ${review.summary}</p>\r\n              <p><strong>Publication Date:</strong> ${review.publication_dt}</p>\r\n              <a href=\"${review.url}\" target=\"_blank\">Read more</a>\r\n              <hr>\r\n          </div>\r\n      `).join(\"\");\n        const formattedBestsellers = bestsellers.map((book)=>{\n            const buyLinks = book.buy_links ? book.buy_links.map((link)=>`\r\n              <li><a href=\"${link.url}\" target=\"_blank\">${link.name}</a></li>\r\n          `).join(\"\") : \"\";\n            return `\r\n              <div class=\"book\">\r\n                  <h2>${book.title}</h2>\r\n                  <p><strong>Author:</strong> ${book.author}</p>\r\n                  <img src=\"${book.book_image}\" alt=\"${book.title}\" width=\"${book.book_image_width}\" height=\"${book.book_image_height}\">\r\n                  <p><strong></strong> ${book.description}</p>\r\n                  <p><strong>Publisher:</strong> ${book.publisher}</p>\r\n                  <p><strong>Buy Links:</strong>\r\n                      <ul>${buyLinks}</ul>\r\n                  </p>\r\n                  <hr>\r\n              </div>\r\n          `;\n        }).join(\"\");\n        document.getElementById(\"book-review\").innerHTML = formattedReviews;\n        document.getElementById(\"to-read\").innerHTML = formattedBestsellers;\n    } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        document.getElementById(\"content\").innerText = \"Error fetching data.\";\n    }\n}\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    $35da740d59af89ba$var$fetchAllData();\n});\ndocument.querySelectorAll(\".scroll-link\").forEach((link)=>{\n    link.addEventListener(\"click\", function(e) {\n        e.preventDefault();\n        const targetId = this.getAttribute(\"href\");\n        const targetElement = document.querySelector(targetId);\n        if (targetElement) {\n            const headerHeight = document.querySelector(\"header\").offsetHeight;\n            const elementPosition = targetElement.getBoundingClientRect().top;\n            const offsetPosition = elementPosition + window.pageYOffset - headerHeight;\n            window.scrollTo({\n                top: offsetPosition,\n                behavior: \"smooth\"\n            });\n        }\n    });\n});\n\n\n//# sourceMappingURL=index.723a9507.js.map\n","const apiUrls = [\r\n  'https://api.nytimes.com/svc/books/v3/reviews.json?author=Stephen+King&api-key=yZMn0M2qMZZ73db9jKLRryq2vpGRHVZj',\r\n  'https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=FGFGfSjcUsbw09HuTzKJsY2fAZMmkqwT'\r\n];\r\n\r\nasync function fetchAllData() {\r\n  try {\r\n      const fetchPromises = apiUrls.map(url => fetch(url).then(response => {\r\n          if (!response.ok) {\r\n              throw new Error(`HTTP error! Status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n      }));\r\n\r\n      const results = await Promise.all(fetchPromises);\r\n      const reviews = results[0].results;\r\n      const bestsellers = results[1].results.books;\r\n\r\n      const formattedReviews = reviews.map((review) => `\r\n          <div class=\"book\">\r\n              <h2>${review.book_title}</h2>\r\n              <p><strong>Author:</strong> ${review.book_author}</p>\r\n              <p><strong></strong> ${review.summary}</p>\r\n              <p><strong>Publication Date:</strong> ${review.publication_dt}</p>\r\n              <a href=\"${review.url}\" target=\"_blank\">Read more</a>\r\n              <hr>\r\n          </div>\r\n      `).join('');\r\n\r\n      const formattedBestsellers = bestsellers.map((book) => {\r\n          const buyLinks = book.buy_links ? book.buy_links.map(link => `\r\n              <li><a href=\"${link.url}\" target=\"_blank\">${link.name}</a></li>\r\n          `).join('') : '';\r\n\r\n          return `\r\n              <div class=\"book\">\r\n                  <h2>${book.title}</h2>\r\n                  <p><strong>Author:</strong> ${book.author}</p>\r\n                  <img src=\"${book.book_image}\" alt=\"${book.title}\" width=\"${book.book_image_width}\" height=\"${book.book_image_height}\">\r\n                  <p><strong></strong> ${book.description}</p>\r\n                  <p><strong>Publisher:</strong> ${book.publisher}</p>\r\n                  <p><strong>Buy Links:</strong>\r\n                      <ul>${buyLinks}</ul>\r\n                  </p>\r\n                  <hr>\r\n              </div>\r\n          `;\r\n      }).join('');\r\n\r\n      document.getElementById('book-review').innerHTML = formattedReviews;\r\n      document.getElementById('to-read').innerHTML = formattedBestsellers;\r\n\r\n  } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      document.getElementById('content').innerText = 'Error fetching data.';\r\n  }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  fetchAllData();\r\n});\r\n\r\ndocument.querySelectorAll('.scroll-link').forEach(link => {\r\n  link.addEventListener('click', function(e) {\r\n      e.preventDefault(); \r\n      const targetId = this.getAttribute('href'); \r\n      const targetElement = document.querySelector(targetId);\r\n\r\n      if (targetElement) {\r\n          const headerHeight = document.querySelector('header').offsetHeight;\r\n          const elementPosition = targetElement.getBoundingClientRect().top;\r\n          const offsetPosition = elementPosition + window.pageYOffset - headerHeight; \r\n\r\n          window.scrollTo({\r\n              top: offsetPosition,\r\n              behavior: 'smooth' \r\n          });\r\n      }\r\n  });\r\n});"],"names":["$35da740d59af89ba$var$apiUrls","$35da740d59af89ba$var$fetchAllData","fetchPromises","map","url","fetch","then","response","ok","Error","status","json","results","Promise","all","reviews","bestsellers","books","formattedReviews","review","book_title","book_author","summary","publication_dt","join","formattedBestsellers","book","buyLinks","buy_links","link","name","title","author","book_image","book_image_width","book_image_height","description","publisher","document","getElementById","innerHTML","error","console","innerText","addEventListener","querySelectorAll","forEach","e","preventDefault","targetId","getAttribute","targetElement","querySelector","headerHeight","offsetHeight","offsetPosition","elementPosition","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior"],"version":3,"file":"index.723a9507.js.map"}